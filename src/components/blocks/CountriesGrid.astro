---
import countries from '../../data/countries.json';
import type { Country } from '../../types/country';
import CategoryFilter from './CategoryFilter.astro';
import CountryCard from './CountryCard.astro';

const validCountries: Country[] = Array.isArray(countries)
  ? countries.filter(
      (country) =>
        country &&
        typeof country === 'object' &&
        typeof country.slug === 'string' &&
        country.slug.trim() !== '' &&
        typeof country.name === 'string' &&
        country.name.trim() !== ''
    )
  : [];

const categories = [
  ...new Set(
    validCountries
      .map((country) => country.category)
      .filter((cat) => typeof cat === 'string' && cat.trim() !== '')
  ),
];

const allCategories = ['All', ...categories];
---

<section class='causes-section' aria-labelledby='causes-heading'>
  <h2 id='causes-heading' class='causes-heading'>Supporting Communities In</h2>

  <CategoryFilter categories={allCategories} activeCategory='All' />

  <ul class='countries-grid' id='countries-grid' role='list'>
    {
      validCountries.map((country, index) => (
        <CountryCard
          slug={country.slug}
          name={country.name}
          flag={typeof country.flag === 'string' ? country.flag : undefined}
          description={
            typeof country.description === 'string'
              ? country.description
              : undefined
          }
          category={
            typeof country.category === 'string' ? country.category : undefined
          }
          style={`--i:${index}`}
          data-category={
            typeof country.category === 'string' ? country.category : 'All'
          }
        />
      ))
    }
  </ul>
</section>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    function filterCountries(selectedCategory) {
      const buttons = document.querySelectorAll('.category-btn');
      const cards = document.querySelectorAll('.country-card');

      buttons.forEach((btn) => {
        if (btn.getAttribute('data-category') === selectedCategory) {
          btn.classList.add('active');
          btn.setAttribute('aria-selected', 'true');
        } else {
          btn.classList.remove('active');
          btn.setAttribute('aria-selected', 'false');
        }
      });

      cards.forEach((card) => {
        const cardCategory = card.getAttribute('data-category');
        if (selectedCategory === 'All' || cardCategory === selectedCategory) {
          card.style.display = 'flex';
        } else {
          card.style.display = 'none';
        }
      });
    }

    const categoryButtons = document.querySelectorAll('.category-btn');
    categoryButtons.forEach((button) => {
      button.addEventListener('click', function () {
        filterCountries(this.getAttribute('data-category'));
      });
    });
  });
</script>

<style>
  .causes-section {
    margin-top: var(--section-gap);
    width: 100%;
  }

  .causes-heading {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    margin-bottom: var(--gap);
    text-align: center;
  }

  .countries-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--gap-sm);
    max-width: var(--grid-max-width);
    margin: 0 auto;

    --stagger-step: 80ms;
  }

  .country-card {
    display: flex;
    align-items: center;
    gap: var(--gap);
    padding: var(--card-padding);
    background: var(--bg-card);
    border: var(--card-border);
    border-radius: var(--card-radius);
    text-decoration: none;
    transition: var(--card-transition);
    min-height: var(--min-height-card-lg);
    box-sizing: border-box;
    opacity: 0;
    transform: translateY(8px);
    animation: fade-up 360ms calc(var(--i, 0) * var(--stagger-step, 80ms)) ease
      both;
  }

  .country-card:hover {
    background: var(--bg-alt);
    border-color: var(--accent-primary);
    transform: var(--hover-transform);
    box-shadow: var(--hover-shadow);
  }

  .country-card:active {
    transform: var(--active-transform);
    box-shadow: var(--active-shadow);
    transition:
      transform 0.08s cubic-bezier(0.4, 0, 0.2, 1),
      box-shadow 0.08s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .country-flag {
    font-size: 1.5rem;
    flex-shrink: 0;
  }

  .country-info {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
    min-width: 0;
  }

  .country-name {
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    font-size: var(--font-size-base);
  }

  .country-description {
    font-size: var(--font-size-sm);
    color: var(--text-secondary);
    line-height: 1.3;
  }

  @media (width >= 768px) {
    .countries-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--gap);
    }

    .country-card {
      padding: var(--card-padding);
      min-height: var(--min-height-card-lg);
    }

    .causes-heading {
      font-size: var(--font-size-xl);
    }
  }

  @media (hover: none) and (pointer: coarse) {
    .country-card:active {
      transform: scale(0.98);
      transition: transform 0.1s ease;
    }
  }

  @keyframes fade-up {
    from {
      opacity: 0;
      transform: translateY(8px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .country-card {
      animation: none !important;
      transition: none !important;
      transform: none !important;
      opacity: 1 !important;
    }
  }
</style>
