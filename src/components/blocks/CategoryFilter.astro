---
import { isArray, isString } from 'radash';

export interface CategoryFilterProps {
  categories: string[];
  activeCategory?: string;
}

const { categories, activeCategory = 'All' } =
  Astro.props as CategoryFilterProps;

const safeCategories = isArray(categories) ? categories : [];
const filteredCategories = safeCategories.filter(
  (cat) => isString(cat) && cat.trim() !== ''
);

const safeActiveCategory = isString(activeCategory) ? activeCategory : 'All';
---

<div class='category-filters' id='category-filters' role='tablist'>
  {
    filteredCategories.map((category) => (
      <button
        class={`category-btn ${category === safeActiveCategory ? 'active' : ''}`}
        data-category={category}
        type='button'
        role='tab'
        aria-selected={category === safeActiveCategory}
        id={`tab-${category.replace(/\s+/g, '-').toLowerCase()}`}
        aria-controls={`panel-${category.replace(/\s+/g, '-').toLowerCase()}`}
      >
        {category}
      </button>
    ))
  }
</div>

<style>
  .category-filters {
    display: flex;
    flex-wrap: wrap;
    gap: var(--gap-sm);
    justify-content: center;
    margin-bottom: var(--gap-xl);
    padding: 0 var(--gap);
  }

  .category-btn {
    padding: var(--gap-sm) var(--gap);
    background: var(--bg-card);
    border: var(--card-border);
    border-radius: var(--card-radius);
    cursor: pointer;
    font-size: var(--font-size-sm);
    color: var(--text-secondary);
    transition: all 0.2s ease;
    white-space: nowrap;
  }

  .category-btn:hover {
    background: var(--bg-alt);
    border-color: var(--accent-primary);
    color: var(--text-primary);
  }

  .category-btn.active {
    background: var(--accent-primary);
    border-color: var(--accent-primary);
    color: white;
  }

  @media (width >= 768px) {
    .category-filters {
      gap: var(--gap);
    }

    .category-btn {
      padding: 0.6rem 1.2rem;
      font-size: 0.9rem;
    }
  }
</style>
