---
import '@fontsource-variable/jetbrains-mono';
import '@fontsource-variable/oswald';
import '@fontsource-variable/work-sans';
import 'remixicon/fonts/remixicon.css';
import '../styles/global.css';
import Footer from './Footer.astro';
import Header from './Header.astro';
import SEO from './SEO.astro';
import Sidebar from './Sidebar.astro';

export interface Props {
  title: string;
  description?: string;
  showSidebar?: boolean;
  image?: string;
  type?: 'website' | 'article';
  datePublished?: string;
  dateModified?: string;
  canonical?: string;
}

const {
  title,
  description,
  showSidebar = true,
  image,
  type,
  datePublished,
  dateModified,
  canonical,
} = Astro.props;
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <link rel='apple-touch-icon' sizes='180x180' href='/apple-touch-icon.png' />
    <link rel='icon' type='image/png' sizes='32x32' href='/favicon-32x32.png' />
    <link rel='icon' type='image/png' sizes='16x16' href='/favicon-16x16.png' />
    <link rel='manifest' href='/site.webmanifest' />
    <link rel='sitemap' href='/sitemap-index.xml' />
    <script>
      (function () {
        let theme = 'light';
        try {
          const stored = localStorage.getItem('theme');
          if (stored === 'light' || stored === 'dark') {
            theme = stored;
          } else {
            const systemPrefersDark =
              window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            theme = systemPrefersDark ? 'dark' : 'light';
          }
        } catch (error) {
          const systemPrefersDark =
            window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          theme = systemPrefersDark ? 'dark' : 'light';
        }
        document.documentElement.dataset.theme = theme;
      })();
    </script>
    <SEO
      title={title}
      description={description}
      image={image}
      type={type}
      datePublished={datePublished}
      dateModified={dateModified}
      canonical={canonical}
    />
  </head>
  <body>
    <div class='site-wrapper'>
      <Header />

      <main class='main-content' class:list={{ 'with-sidebar': showSidebar }}>
        {
          showSidebar && (
            <aside class='sidebar'>
              <Sidebar />
            </aside>
          )
        }

        <div class='content'>
          <slot />
        </div>
      </main>

      <Footer />
    </div>
  </body>
</html>

<style>
  .site-wrapper {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .main-content {
    flex: 1;
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 var(--content-padding);
    width: 100%;
  }

  .main-content.with-sidebar {
    display: grid;
    grid-template-columns: 1fr;
    gap: calc(var(--grid-unit) * 4);
  }

  .content {
    min-width: 0;
    padding: calc(var(--grid-unit) * 3) 0;
  }

  .sidebar {
    order: -1;
    padding-top: calc(var(--grid-unit) * 3);
  }

  @media (min-width: 1024px) {
    .main-content.with-sidebar {
      grid-template-columns: var(--sidebar-width) 1fr;
    }

    .sidebar {
      order: 0;
      padding-top: calc(var(--grid-unit) * 3);
    }
  }
</style>
