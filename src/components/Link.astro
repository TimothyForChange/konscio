---
import 'remixicon/fonts/remixicon.css'

interface Props {
  icon: string
  title: string
  description: string
  url: string
  colorIndex?: number
}

const { icon, title, description, url, colorIndex = 0 } = Astro.props

const hotColors = [
  'var(--accent-primary)',
  'var(--hot-orange)',
  'var(--hot-purple)',
  'var(--hot-cyan)',
  'var(--hot-yellow)',
  'var(--hot-emerald)',
]

const assignedColor = hotColors[colorIndex % hotColors.length]
---

<a href={url} class='link' style={`--link-accent: ${assignedColor}`}>
  <span class='link-icon'>
    <i class={'ri-' + icon}></i>
  </span>
  <div class='link-content'>
    <h2 class='link-title'>{title}</h2>
    <p class='link-description'>{description}</p>
  </div>
</a>

<style>
  .link {
    padding: 1rem;
    display: flex;
    border: 1px solid var(--border);
    border-radius: 0.5rem;
    text-decoration: none;
    background: var(--bg-card);
    transition: all 0.2s ease;
  }

  .link:hover {
    border: 1px solid var(--link-accent);
    background: var(--bg-surface);
    transform: translateY(-1px);
  }

  .link-icon {
    width: 3rem;
    height: 3rem;
    min-width: 3rem;
    min-height: 3rem;
    margin-right: 1rem;
    background: var(--bg-surface);
    border-radius: 0.375rem;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background 0.2s ease;
  }
  
  .link-icon i {
    font-size: 1.25rem;
    color: var(--text-secondary);
    transition: color 0.2s ease;
  }

  .link:hover .link-icon {
    background: var(--link-accent);
  }

  .link:hover .link-icon i {
    color: white;
  }

  .link-title {
    color: var(--text-primary);
    font-weight: 600;
    font-size: 1rem;
    margin-bottom: 0.25rem;
  }

  .link-description {
    color: var(--text-muted);
    font-weight: 400;
    font-size: 0.875rem;
    line-height: 1.4;
  }
</style>
