---
import { formatTermKey, formatText } from '../../scripts/utils';

export interface Props {
  coreTerms?: Record<string, string>;
  countrySlug: string;
}

const { coreTerms, countrySlug } = Astro.props as Props;

const safeCountrySlug = typeof countrySlug === 'string' ? countrySlug : '';
if (!safeCountrySlug) {
  return null;
}

const safeCoreTerms =
  coreTerms && typeof coreTerms === 'object' && !Array.isArray(coreTerms)
    ? coreTerms
    : {};

const hasTerms = Object.keys(safeCoreTerms).length > 0;
if (!hasTerms) {
  return null;
}

const hasContent = Object.values(safeCoreTerms).some(
  (value) => typeof value === 'string' && value.trim() !== ''
);
if (!hasContent) {
  return null;
}
---

<section class='terms-section' aria-labelledby='history-heading'>
  <h2 id='history-heading'>Historical Context</h2>

  {
    Object.entries(safeCoreTerms)
      .filter(
        ([key, value]) =>
          typeof key === 'string' &&
          typeof value === 'string' &&
          key.trim() !== '' &&
          value.trim() !== ''
      )
      .map(([key, value]) => (
        <div class='term-group'>
          <h3>{formatTermKey(key, safeCountrySlug)}</h3>
          <p set:html={formatText(value)} />
        </div>
      ))
  }
</section>

<style>
  .terms-section {
    margin-bottom: var(--section-gap);
  }

  .terms-section h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: var(--heading-gap);
    border-bottom: 2px solid var(--accent-primary);
    padding-bottom: 0.5rem;
  }

  .terms-section h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 0.75rem;
    margin-top: var(--heading-gap);
  }

  .term-group {
    margin-bottom: calc(var(--heading-gap) * 1.25);
  }

  .term-group:last-child {
    margin-bottom: 0;
  }

  .term-group:first-child h3 {
    margin-top: 0;
  }

  @media (width >= 768px) {
    .terms-section h2 {
      font-size: 1.5rem;
    }
  }
</style>
