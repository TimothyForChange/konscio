---
import LinkButton from '../ui/LinkButton.astro';
import ActionCard from './ActionCard.astro';
import ActionGroup from './ActionGroup.astro';

export interface ActionItem {
  title: string;
  description?: string;
  url: string;
  buttonText: string;
}

export interface ActionGroupData {
  icon: string;
  title: string;
  type: 'links' | 'cards';
  items: (ActionItem | string)[];
}

export interface Properties {
  sectionTitle: string;
  groups: ActionGroupData[];
  id?: string;
  standalone?: boolean;
}

const {
  sectionTitle,
  groups,
  id,
  standalone = true,
} = Astro.props as Properties;
---

{
  standalone ? (
    <section
      class='action-section'
      {...(id ? { id } : {})}
      aria-labelledby={id || 'action-section'}
    >
      <h2 id={id || 'action-section'}>{sectionTitle}</h2>

      {groups.map((group) => (
        <ActionGroup icon={group.icon} title={group.title}>
          {group.type === 'links' ? (
            <div class='donate-organisations'>
              {(group.items as ActionItem[]).map((item) => (
                <LinkButton
                  title={item.title}
                  description={item.description}
                  url={item.url}
                  buttonText={item.buttonText}
                />
              ))}
            </div>
          ) : (
            <div class='advocacy-list'>
              {(group.items as string[]).map((content) => (
                <ActionCard content={content} />
              ))}
            </div>
          )}
        </ActionGroup>
      ))}
    </section>
  ) : (
    <>
      {groups.map((group) => (
        <ActionGroup icon={group.icon} title={group.title}>
          {group.type === 'links' ? (
            <div class='donate-organisations'>
              {(group.items as ActionItem[]).map((item) => (
                <LinkButton
                  title={item.title}
                  description={item.description}
                  url={item.url}
                  buttonText={item.buttonText}
                />
              ))}
            </div>
          ) : (
            <div class='advocacy-list'>
              {(group.items as string[]).map((content) => (
                <ActionCard content={content} />
              ))}
            </div>
          )}
        </ActionGroup>
      ))}
    </>
  )
}

<style>
  .action-section {
    background: var(--bg-card);
    border: var(--card-border);
    border-radius: var(--card-radius);
    padding: var(--section-gap);
    margin-bottom: var(--section-gap);
    box-shadow: var(--shadow-sm);
  }

  .action-section h2 {
    margin-top: 0;
    border-bottom: var(--section-heading-border);
    padding-bottom: var(--section-heading-padding-bottom);
    font-size: 1.5rem;
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    margin-bottom: var(--heading-gap);
  }

  .donate-organisations {
    display: grid;
    gap: var(--gap-lg);
  }

  @media (width >= 768px) {
    .action-section {
      padding: calc(var(--section-gap) + var(--space-xs));
      margin-bottom: calc(var(--section-gap) + var(--space-xs));
    }
  }
</style>
