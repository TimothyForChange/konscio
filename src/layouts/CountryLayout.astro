---
import {
  isArray,
  isEmpty,
  isObject as radashIsObject,
  isString as radashIsString,
} from 'radash';
import BackButton from '../components/common/BackButton.astro';
import AdditionalReading from '../components/country/AdditionalReading.astro';
import CountryHeader from '../components/country/CountryHeader.astro';
import CrisisSection from '../components/country/CrisisSection.astro';
import HistoricalContextSection from '../components/country/HistoricalContextSection.astro';
import HumanitarianImpact from '../components/country/HumanitarianImpact.astro';
import LegacySection from '../components/country/LegacySection.astro';
import TakeAction from '../components/country/TakeAction.astro';
import Timeline from '../components/country/Timeline.astro';
import { SITE_URL } from '../constants/site';
import countriesList from '../data/mapping/countries.ts';
import type { CountryData } from '../types/country';
import Layout from './Layout.astro';

export interface Properties {
  countryData?: CountryData;
  title?: string;
  countrySlug: string;
}

const { countryData, countrySlug } = Astro.props as Properties;
const passedTitle = (Astro.props as Properties).title;
const image = `${SITE_URL}/countries/${countrySlug}.jpg`;
const countryMapping = Array.isArray(countriesList)
  ? countriesList.find((c) => c.slug === countrySlug)
  : undefined;
const pageDescription = countryMapping?.seoDescription;
const canonicalUrl = `${SITE_URL}/countries/${encodeURIComponent(countrySlug)}`;

const articleSchema = {
  '@type': 'Article',
  '@id': `${SITE_URL}/countries/${countrySlug}/#article`,
  headline:
    passedTitle && radashIsString(passedTitle)
      ? passedTitle
      : `${countryData?.name} Crisis - Timothy for Change`,
  description: pageDescription,
  image: image ? image : undefined,
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': canonicalUrl,
  },
  author: {
    '@id': `${SITE_URL}/#person`,
  },
  publisher: {
    '@id': `${SITE_URL}/#person`,
  },
  datePublished:
    countryData?.lastUpdated || new Date().toISOString().split('T')[0],
  dateModified:
    countryData?.lastUpdated || new Date().toISOString().split('T')[0],
  about: [
    {
      '@type': 'Place',
      name: countryData?.name,
      addressCountry: countrySlug === 'palestine' ? 'PS' : undefined,
    },
    {
      '@type': 'Thing',
      name: 'Structural Violence',
    },
  ],
  keywords: [
    countryData?.name,
    'structural violence',
    'human rights',
    countryMapping?.category?.toLowerCase(),
  ].filter(Boolean),
};
---

<Layout
  title={passedTitle && typeof passedTitle === 'string'
    ? passedTitle
    : `${countryData?.name} Crisis - Timothy for Change`}
  description={pageDescription}
  canonicalUrl={canonicalUrl}
  countrySlug={countrySlug}
  articleSchema={articleSchema}
  image={image}
>
  <div class='page-wrapper'>
    <main class='container' id='container' tabindex='-1'>
      <div class='country-page'>
        <CountryHeader
          countryName={countryData?.name}
          countrySlug={countrySlug}
        />

        {
          radashIsString(countryData?.currentCrisisSummary) && (
            <CrisisSection summary={countryData.currentCrisisSummary} />
          )
        }

        {
          Array.isArray(countryData?.humanitarianImpact) &&
            countryData.humanitarianImpact.length > 0 && (
              <HumanitarianImpact
                humanitarianImpact={countryData.humanitarianImpact}
                lastUpdated={countryData.lastUpdated}
              />
            )
        }

        {
          isArray(countryData?.timeline) && !isEmpty(countryData?.timeline) && (
            <Timeline timeline={countryData.timeline} />
          )
        }

        {
          radashIsObject(countryData?.colonialRoot) && (
            <LegacySection
              title='The Colonial Root'
              power={countryData.colonialRoot.colonialPower}
              legacy={countryData.colonialRoot.legacy}
            />
          )
        }

        {
          radashIsObject(countryData?.imperialRoot) && (
            <LegacySection
              title='The Imperial Root'
              power={countryData.imperialRoot.imperialPower}
              legacy={countryData.imperialRoot.legacy}
            />
          )
        }

        {
          Array.isArray(countryData?.historicalContext) &&
            countryData.historicalContext.length > 0 && (
              <HistoricalContextSection
                historicalContext={countryData.historicalContext}
                countrySlug={countrySlug}
              />
            )
        }

        {
          radashIsObject(countryData?.takeAction) && (
            <TakeAction takeAction={countryData.takeAction} id='take-action' />
          )
        }

        {
          isArray(countryData?.reading) && !isEmpty(countryData?.reading) && (
            <AdditionalReading reading={countryData.reading} id='sources' />
          )
        }

        {
          countryData?.lastUpdated && (
            <div class='country-last-updated'>
              Last updated: {countryData.lastUpdated}
            </div>
          )
        }
        <div class='country-bottom-back'>
          <BackButton />
        </div>
      </div>
    </main>
  </div>
</Layout>

<style>
  .country-page {
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: var(--card-padding);
  }

  .country-bottom-back {
    display: flex;
    justify-content: center;
    margin: var(--gap-xl) 0 var(--gap-sm);
  }

  .country-last-updated {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: var(--space-md) auto var(--space-xs) auto;
    font-size: var(--font-size-sm);
    color: var(--text-muted);
    font-style: italic;
    opacity: 0.95;
    max-width: 100%;
    width: fit-content;
  }

  .country-page p {
    line-height: 1.7;
    color: var(--text-secondary);
    margin-bottom: var(--gap);
  }

  @media (min-width: 768px) {
    .country-page {
      padding: calc(var(--card-padding) + var(--space-xs));
    }
  }
</style>
