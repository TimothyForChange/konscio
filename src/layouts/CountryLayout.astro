---
import { isEmpty } from 'radash';
import TakeAction from '../components/blocks/TakeAction.astro';
import ColonialSection from '../components/country/ColonialSection.astro';
import CountryHeader from '../components/country/CountryHeader.astro';
import CrisisSection from '../components/country/CrisisSection.astro';
import HistoricalContext from '../components/country/HistoricalContext.astro';
import HumanitarianImpact from '../components/country/HumanitarianImpact.astro';
import ImperialLegacy from '../components/country/ImperialLegacy.astro';
import Timeline from '../components/country/Timeline.astro';
import BackButton from '../components/shared/BackButton.astro';
import type { CountryData } from '../types';
import Layout from './Layout.astro';
import 'remixicon/fonts/remixicon.css';

export interface Properties {
  countryData?: CountryData;
  title?: string;
  countrySlug: string;
}

const { countryData, countrySlug } = Astro.props as Properties;
const safeCountrySlug =
  typeof countrySlug === 'string' ? countrySlug : 'unknown';
const passedTitle = (Astro.props as Properties).title;
const safeName =
  countryData?.name && typeof countryData.name === 'string'
    ? countryData.name
    : 'Country';

const pageDescription = `Learn about the humanitarian crisis in ${safeName} - Timothy for Change provides critical analysis of global humanitarian issues.`;
const canonicalUrl = `https://timothyforchange.co.za/${encodeURIComponent(safeCountrySlug)}`;

const articleSchema = {
  '@type': 'Article',
  '@id': `https://timothyforchange.co.za/${safeCountrySlug}/#article`,
  headline:
    passedTitle && typeof passedTitle === 'string'
      ? passedTitle
      : `${safeName} Crisis - Timothy for Change`,
  description: pageDescription,
  author: {
    '@id': 'https://timothyforchange.co.za/#person',
  },
  publisher: {
    '@id': 'https://timothyforchange.co.za/#person',
  },
  datePublished:
    countryData?.lastUpdated || new Date().toISOString().split('T')[0],
  dateModified:
    countryData?.lastUpdated || new Date().toISOString().split('T')[0],
};
---

<Layout
  title={passedTitle && typeof passedTitle === 'string'
    ? passedTitle
    : `${safeName} Crisis - Timothy for Change`}
  description={pageDescription}
  canonicalUrl={canonicalUrl}
  countrySlug={safeCountrySlug}
  articleSchema={articleSchema}
>
  <div class='page-wrapper'>
    <main class='container' id='container' tabindex='-1'>
      <div class='country-page'>
        <CountryHeader countryName={safeName} countrySlug={safeCountrySlug} />

        {
          countryData?.currentCrisisSummary &&
            typeof countryData.currentCrisisSummary === 'string' && (
              <CrisisSection summary={countryData.currentCrisisSummary} />
            )
        }

        {
          countryData?.humanitarianImpact && (
            <HumanitarianImpact
              humanitarianImpact={countryData.humanitarianImpact}
              lastUpdated={countryData.lastUpdated}
            />
          )
        }

        {
          Array.isArray(countryData?.timeline) &&
            !isEmpty(countryData.timeline) && (
              <Timeline timeline={countryData.timeline} />
            )
        }

        {
          countryData?.colonialRoot &&
            typeof countryData.colonialRoot === 'object' &&
            !Array.isArray(countryData.colonialRoot) && (
              <ColonialSection colonialRoot={countryData.colonialRoot} />
            )
        }

        {
          countryData?.imperialRoot &&
            typeof countryData.imperialRoot === 'object' &&
            !Array.isArray(countryData.imperialRoot) && (
              <ImperialLegacy imperialRoot={countryData.imperialRoot} />
            )
        }

        {
          countryData?.coreTerms &&
            typeof countryData.coreTerms === 'object' &&
            !Array.isArray(countryData.coreTerms) && (
              <HistoricalContext
                coreTerms={countryData.coreTerms}
                countrySlug={safeCountrySlug}
              />
            )
        }

        {
          countryData?.takeAction &&
            typeof countryData.takeAction === 'object' && (
              <TakeAction
                takeAction={countryData.takeAction}
                id='take-action'
              />
            )
        }

        <div class='country-bottom-back'>
          <BackButton />
        </div>
      </div>
    </main>
  </div>
</Layout>

<style>
  .country-page {
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: var(--card-padding);
  }

  .country-bottom-back {
    display: flex;
    justify-content: center;
    margin: var(--gap-xl) 0 var(--gap-sm);
  }

  .country-page p {
    line-height: 1.7;
    color: var(--text-secondary);
    margin-bottom: var(--gap);
  }

  @media (width >= 768px) {
    .country-page {
      padding: calc(var(--card-padding) + var(--space-xs));
    }

    .country-title {
      font-size: 2rem;
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: var(--gap);
    }

    .country-flag {
      font-size: 1.5rem;
    }
  }
</style>
